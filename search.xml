<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/08/03/%E7%94%B5%E8%B5%9B/"/>
      <url>/2023/08/03/%E7%94%B5%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><p>我们组选了个B题，同轴电缆长度与终端负载检测<br>上午还真没啥事，8点等题，上午买买器材，吃个午饭</p><p>同轴电缆长度测定原理：</p><blockquote><p>向同轴电缆发一道脉冲，由于一端开路，同轴电缆会反弹一道脉冲，这就意味着在同轴线一端测量波形，我们能得到两个波形：一个是发射波，一个是反弹波。</p></blockquote><p>GitHub上捞了个<a href="https://github.com/hugen79/NanoVNA-H">代码</a>，但是ChibiOS&#x2F;os&#x2F;hal&#x2F;ports&#x2F;STM32&#x2F;STM32F0xx&#x2F;hal_lld.c报错，换成<a href="https://github.com/DiSlord/NanoVNA-D">另一个</a>就搞定了（第二个现在还在更新，而且两个差别其实不是特别大，我们就可以比较方便地套用了）</p><p>主要是仪器还没到，不能刷固件确认。其实只要固件有了，基本都没什么太大问题，然后就是写论文了。<br>我们也是有能干起来的活的，比如测量的UI，不知道我能不能帮的上忙。（我C稀碎，而且python也是完全不会）</p><p>睡觉了，等第二天器材到了就开始忙了。</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>快递早上就到了，接下来就是用micropython对NanoVNC的操作了。</p><p>之前没搞过micropython，踩了一些坑，跟着<a href="https://zhuanlan.zhihu.com/p/366411699">这篇文章</a>走了一遍，就能上了。<br>首先是环境，安装所需的requirements，然后看到有个模块叫machine<br>这个模块是micropython生成的，所以应该这么搞：<br>进入虚拟环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ./venv/bin/activate</span><br></pre></td></tr></table></figure><p>Windows：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./venv/scripts/activate.bat</span><br></pre></td></tr></table></figure><p>之后（使用阿里云的镜像加速）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install micropy-cli esptool -i https://mirrors.aliyun.com/pypi/simple</span><br></pre></td></tr></table></figure><p>擦除ESP32S3的固件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py --chip esp32s3 --port /dev/yourDevice erase_flash</span><br></pre></td></tr></table></figure><p>将micropython的固件刷上ESP32：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py --chip esp32s3 --port /dev/youtDevice write_flash -z 0 /path/to/BIN_FILE.bin</span><br></pre></td></tr></table></figure><p>串口连接ESP32S3，波特率115200，就可以了。</p><p>第一天的时候其实是这样的：打算使用官方的开源代码进行逆向，获取数据。今天找到了这个：<br>有这个软件：<a href="https://github.com/NanoVNA-Saver/nanovna-saver">NanoVNA-Saver</a>，是在Windows、Linux和MacOS上用于提取NanoVNA的数据的，也就是说NanoVNA-H使用串口进行调试，那么就可以通过串口指令提取数据：</p><blockquote><p>A multiplatform tool to save Touchstone files from the NanoVNA, sweep frequency spans in segments to gain more than 101 data points, and generally display and analyze the resulting data.</p></blockquote><blockquote><p>This software connects to a NanoVNA and extracts the data for display on a computer and allows saving the sweep data to Touchstone files.</p></blockquote><p>接下来就是串口截取数据了。Windows下可以使用<a href="http://www.ceiwei.com/mt/">CommMonitor</a>进行监视，Linux一开始用的是这个<a href="https://github.com/chipkin/Linux-HighSpeedSerialMonitor/">“HighSpeedSerialMonitor”</a>，但是用这个的话会报错闪退，ERROR - too many retries。我猜估计是占用问题，Windows下那个CommMonitor就没有问题。<br>搜到stackexchange.com貌似有个<a href="https://unix.stackexchange.com/questions/12359/how-can-i-monitor-serial-port-traffic">类似问题的帖子</a>，提到：</p><blockquote><p><a href="https://www.google.com/search?q=socat+serial+port+pty+tee+debug">Googling</a> “socat serial port pty tee debug” will point you to several “standard procedure” examples, one being:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">socat  /dev/ttyS0,raw,<span class="built_in">echo</span>=0  \</span><br><span class="line">SYSTEM:<span class="string">&#x27;tee in.txt | socat - &quot;PTY,link=/tmp/ttyV0,raw,echo=0,waitslave&quot; | tee out.txt&#x27;</span></span><br></pre></td></tr></table></figure><p>貌似没问题，时间来不及了，没时间验证，明天再说。<br>明天要验证socat端口转发，两个佬晚上通宵搞定软件和硬件，明天写完论文就搞定了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RongXiaoliBotv0.2.1</title>
      <link href="/2023/03/21/RongXiaoliBotv0-2-1/"/>
      <url>/2023/03/21/RongXiaoliBotv0-2-1/</url>
      
        <content type="html"><![CDATA[<h1 id="容小狸bot-v0-2-1更新日志"><a href="#容小狸bot-v0-2-1更新日志" class="headerlink" title="容小狸bot v0.2.1更新日志"></a>容小狸bot v0.2.1更新日志</h1><hr><h2 id="工程中"><a href="#工程中" class="headerlink" title="工程中"></a>工程中</h2><ul><li>osu!bot(插件名称OsuBot);</li><li>backend&#x2F;Network&#x2F;HttpGet 和 backend&#x2F;Network&#x2F;HttpsGet 添加headers支持</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> RongXiaoliBot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇post</title>
      <link href="/2023/03/01/FirstPost/"/>
      <url>/2023/03/01/FirstPost/</url>
      
        <content type="html"><![CDATA[<h1 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h1><p>这个GitHub的个人主页可以说是存在已久，但是最近想捞出来一用，于是就搞了个博客。</p><p>随便记点东西，可能会把容小狸Bot的更新日志发上来，也可能记载一些奇奇怪怪的教程与心得吧。</p><p>着实希望未来可期。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
